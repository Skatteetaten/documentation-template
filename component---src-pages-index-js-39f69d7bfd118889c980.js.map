{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Columns/columns.jsx"],"names":["IndexPage","edges","data","allMarkdownRemark","FrontPageContent","path","content","find","edge","node","fields","slug","dangerouslySetInnerHTML","__html","html","style","textAlign","pageQuery","doubleColGrid","sm","smPush","md","mdPush","lg","lgPush","xl","xlPush","xxl","xxlPush","singleColGrid","SingleColumnRow","children","Row","Col","DoubleColumnRow","React","Children","map","child"],"mappings":"2FAAA,2GA0DeA,UA/BG,SAAC,GAIZ,IAFkBC,EAEnB,EAHJC,KACEC,kBAAqBF,MAGjBG,EAAmB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpBC,EAAUL,EAAMM,MAAK,SAACC,GAC1B,OAAOA,EAAKC,KAAKC,OAAOC,OAASN,KAEnC,OACEC,GAAW,yBAAKM,wBAAyB,CAAEC,OAAQP,EAAQG,KAAKK,SAIpE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKC,MAAO,CAAEC,UAAW,WACvB,mEAGJ,kBAAC,IAAD,KACE,kBAACZ,EAAD,CAAkBC,KAAK,uCACvB,kBAACD,EAAD,CAAkBC,KAAK,wBAS1B,IAAMY,EAAS,c,oJCzDhBC,EAAgB,CACpBC,GAAI,GACJC,OAAQ,EACRC,GAAI,GACJC,OAAQ,EACRC,GAAI,GACJC,OAAQ,EACRC,GAAI,EACJC,OAAQ,EACRC,IAAK,EACLC,QAAS,GAGLC,EAAa,iBACdX,EADc,CAEjBO,GAAI,EACJC,OAAQ,EACRC,IAAK,EACLC,QAAS,IAGLE,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,kBAAC,IAAKC,IAAN,KACE,kBAAC,IAAKC,IAAQJ,EAAgBE,KAI5BG,EAAkB,SAAC,GAAD,IAAGH,EAAH,EAAGA,SAAH,OACtB,kBAAC,IAAKC,IAAN,KACGG,IAAMC,SAASC,IAAIN,GAAU,SAACO,GAC7B,QAAKA,GAGE,kBAAC,IAAKL,IAAQf,EAAgBoB","file":"component---src-pages-index-js-39f69d7bfd118889c980.js","sourcesContent":["import React from \"react\";\nimport Grid from \"@skatteetaten/frontend-components/Grid\";\nimport { SingleColumnRow, DoubleColumnRow } from \"../components/Columns\";\n\nconst InfoSeparator = () => (\n  <SingleColumnRow>\n    <hr style={{ margin: \"30px 0\" }} />\n  </SingleColumnRow>\n);\n\nconst InfoRow = ({ title, picture, children, left }) => {\n  const Picture = () => (\n    <img src={picture} style={{ maxWidth: \"100%\", maxHeight: \"600px\" }} />\n  );\n\n  return (\n    <DoubleColumnRow>\n      {left && <Picture />}\n      <div>\n        {title && <h2>{title}</h2>}\n        {children}\n      </div>\n      {!left && <Picture />}\n    </DoubleColumnRow>\n  );\n};\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const FrontPageContent = ({ path }) => {\n    const content = edges.find((edge) => {\n      return edge.node.fields.slug === path;\n    });\n    return (\n      content && <div dangerouslySetInnerHTML={{ __html: content.node.html }} />\n    );\n  };\n\n  return (\n    <div>\n      <Grid>\n        <SingleColumnRow>\n          <div style={{ textAlign: \"center\" }}>\n            <h1>The Aurora documentation-template</h1>\n          </div>\n        </SingleColumnRow>\n        <DoubleColumnRow>\n          <FrontPageContent path=\"/frontpage/documentation-template/\" />\n          <FrontPageContent path=\"/frontpage/why/\" />\n        </DoubleColumnRow>\n      </Grid>\n    </div>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark {\n      edges {\n        node {\n          html\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Grid from \"@skatteetaten/frontend-components/Grid\";\n\nconst doubleColGrid = {\n  sm: 10,\n  smPush: 1,\n  md: 10,\n  mdPush: 1,\n  lg: 10,\n  lgPush: 1,\n  xl: 3,\n  xlPush: 3,\n  xxl: 3,\n  xxlPush: 3,\n};\n\nconst singleColGrid = {\n  ...doubleColGrid,\n  xl: 6,\n  xlPush: 3,\n  xxl: 6,\n  xxlPush: 3,\n};\n\nconst SingleColumnRow = ({ children }) => (\n  <Grid.Row>\n    <Grid.Col {...singleColGrid}>{children}</Grid.Col>\n  </Grid.Row>\n);\n\nconst DoubleColumnRow = ({ children }) => (\n  <Grid.Row>\n    {React.Children.map(children, (child) => {\n      if (!child) {\n        return false;\n      }\n      return <Grid.Col {...doubleColGrid}>{child}</Grid.Col>;\n    })}\n  </Grid.Row>\n);\n\nDoubleColumnRow.propTypes = {\n  children: (props, propName, componentName) => {\n    if (props[propName].filter((child) => child).length !== 2) {\n      return new Error(`${propName} must contain two elements`);\n    }\n  },\n};\n\nexport { SingleColumnRow, DoubleColumnRow };\n"],"sourceRoot":""}